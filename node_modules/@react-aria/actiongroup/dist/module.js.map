{"mappings":"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","sources":["./packages/@react-aria/actiongroup/src/ActionGroupKeyboardDelegate.ts","./packages/@react-aria/actiongroup/src/useActionGroup.ts","./packages/@react-aria/actiongroup/src/useActionGroupItem.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, Direction, KeyboardDelegate, Orientation} from '@react-types/shared';\nimport {Key} from 'react';\n\nexport class ActionGroupKeyboardDelegate<T> implements KeyboardDelegate {\n  private collection: Collection<T>;\n  private flipDirection: boolean;\n  private disabledKeys: Set<Key>;\n\n  constructor(collection: Collection<T>, direction: Direction, orientation: Orientation, disabledKeys: Set<Key> = new Set()) {\n    this.collection = collection;\n    this.flipDirection = direction === 'rtl' && orientation === 'horizontal';\n    this.disabledKeys = disabledKeys;\n  }\n\n  getKeyLeftOf(key: Key) {\n    if (this.flipDirection) {\n      return this.getNextKey(key);\n    } else {\n      return this.getPreviousKey(key);\n    }\n  }\n\n  getKeyRightOf(key: Key) {\n    if (this.flipDirection) {\n      return this.getPreviousKey(key);\n    } else {\n      return this.getNextKey(key);\n    }\n  }\n\n  getKeyAbove(key: Key) {\n    return this.getPreviousKey(key);\n  }\n\n  getKeyBelow(key: Key) {\n    return this.getNextKey(key);\n  }\n\n  getFirstKey() {\n    let key = this.collection.getFirstKey();\n    if (this.disabledKeys.has(key)) {\n      key = this.getNextKey(key);\n    }\n    return key;\n  }\n\n  getLastKey() {\n    let key = this.collection.getLastKey();\n    if (this.disabledKeys.has(key)) {\n      key = this.getPreviousKey(key);\n    }\n    return key;\n  }\n\n  getNextKey(key) {\n    do {\n      key = this.collection.getKeyAfter(key);\n      if (!key) {\n        key = this.collection.getFirstKey();\n      }\n    } while (this.disabledKeys.has(key));\n    return key;\n  }\n\n  getPreviousKey(key) {\n    do {\n      key = this.collection.getKeyBefore(key);\n      if (!key) {\n        key = this.collection.getLastKey();\n      }\n    } while (this.disabledKeys.has(key));\n    return key;\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {ActionGroupKeyboardDelegate} from './ActionGroupKeyboardDelegate';\nimport {AriaActionGroupProps} from '@react-types/actiongroup';\nimport {filterDOMProps, mergeProps} from '@react-aria/utils';\nimport {HTMLAttributes, RefObject, useMemo, useState} from 'react';\nimport {ListState} from '@react-stately/list';\nimport {Orientation} from '@react-types/shared';\nimport {useFocusWithin} from '@react-aria/interactions';\nimport {useLocale} from '@react-aria/i18n';\nimport {useSelectableCollection} from '@react-aria/selection';\n\nconst BUTTON_GROUP_ROLES = {\n  'none': 'toolbar',\n  'single': 'radiogroup',\n  'multiple': 'toolbar'\n};\n\nexport interface ActionGroupAria {\n  actionGroupProps: HTMLAttributes<HTMLElement>\n}\n\nexport function useActionGroup<T>(props: AriaActionGroupProps<T>, state: ListState<T>, ref: RefObject<HTMLElement>): ActionGroupAria {\n  let {\n    isDisabled,\n    orientation = 'horizontal' as Orientation\n  } = props;\n\n  let {direction} = useLocale();\n  // eslint-disable-next-line arrow-body-style\n  let keyboardDelegate = useMemo(() => {\n    return new ActionGroupKeyboardDelegate(state.collection, direction, orientation, state.disabledKeys);\n  }, [state.collection, direction, orientation, state.disabledKeys]);\n\n  let {collectionProps} = useSelectableCollection({\n    ref,\n    selectionManager: state.selectionManager,\n    keyboardDelegate,\n    disallowSelectAll: true\n  });\n\n  let [isFocusWithin, setFocusWithin] = useState(false);\n  let {focusWithinProps} = useFocusWithin({\n    onFocusWithinChange: setFocusWithin\n  });\n  let tabIndex = isFocusWithin ? -1 : 0;\n\n  let role = BUTTON_GROUP_ROLES[state.selectionManager.selectionMode];\n  return {\n    actionGroupProps: {\n      ...filterDOMProps(props, {labelable: true}),\n      role,\n      'aria-orientation': role === 'toolbar' ? orientation : null,\n      'aria-disabled': isDisabled,\n      ...mergeProps(focusWithinProps, collectionProps),\n      tabIndex: isDisabled ? null : tabIndex\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {HTMLAttributes, Key, RefObject} from 'react';\nimport {ListState} from '@react-stately/list';\nimport {mergeProps} from '@react-aria/utils';\nimport {useSelectableItem} from '@react-aria/selection';\n\ninterface ActionGroupItemProps {\n  key: Key\n}\n\ninterface ActionGroupItemAria {\n  buttonProps: HTMLAttributes<HTMLElement>\n}\n\nconst BUTTON_ROLES = {\n  'none': null,\n  'single': 'radio',\n  'multiple': 'checkbox'\n};\n\nexport function useActionGroupItem<T>(props: ActionGroupItemProps, state: ListState<T>, ref: RefObject<HTMLElement>): ActionGroupItemAria {\n  let selectionMode = state.selectionManager.selectionMode;\n  let buttonProps = {\n    role: BUTTON_ROLES[selectionMode]\n  };\n\n  if (selectionMode !== 'none') {\n    let isSelected = state.selectionManager.isSelected(props.key);\n    buttonProps['aria-checked'] = isSelected;\n  }\n\n  let {itemProps} = useSelectableItem({\n    selectionManager: state.selectionManager,\n    key: props.key,\n    ref\n  });\n\n  return {\n    buttonProps: mergeProps(itemProps, buttonProps)\n  };\n}\n"],"names":["ActionGroupKeyboardDelegate","constructor","collection","direction","orientation","disabledKeys","Set","flipDirection","getKeyLeftOf","key","getNextKey","getPreviousKey","getKeyRightOf","getKeyAbove","getKeyBelow","getFirstKey","has","getLastKey","getKeyAfter","getKeyBefore","BUTTON_GROUP_ROLES","useActionGroup","props","state","ref","isDisabled","useLocale","keyboardDelegate","useMemo","collectionProps","useSelectableCollection","selectionManager","disallowSelectAll","isFocusWithin","setFocusWithin","useState","focusWithinProps","useFocusWithin","onFocusWithinChange","tabIndex","role","selectionMode","actionGroupProps","filterDOMProps","labelable","mergeProps","BUTTON_ROLES","useActionGroupItem","buttonProps","isSelected","itemProps","useSelectableItem"],"version":3,"file":"module.js.map"}