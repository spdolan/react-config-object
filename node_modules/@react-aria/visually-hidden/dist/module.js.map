{"mappings":";;;;;;AAAA,SAASA,sBAAT,CAAgCC,CAAhC,EAAmC;AACjC,SAAOA,CAAC,IAAIA,CAAC,CAACC,UAAP,GAAoBD,CAAC,CAACE,OAAtB,GAAgCF,CAAvC;AACD;;;;ACFD,4CAAiB;AACf,uCAAqC,0CADtB;AAEf,kBAAgB;AAFD,CAAjB;;;AC8BA;;;;OAIO,SAASG,cAAT,CAAwBC,KAAxB,EAAoD;AACzD,MAAI;AACFC,IAAAA,QADE;AAEFC,IAAAA,SAFE;AAGFC,IAAAA,WAAW,EAAEC,OAAO,GAAG,KAHrB;AAIFC,IAAAA;AAJE,MAMAL,KANJ;AAAA,MAKKM,UALL,uDAMIN,KANJ;;AAQAE,EAAAA,SAAS,GAAGK,WAAU,CACpB,mDAAO,mCAAP,CADoB,EAEpB;AAAC,KAAC,mDAAO,cAAP,CAAD,GAA0BF;AAA3B,GAFoB,EAGpBH,SAHoB,CAAtB;AAMA,sBACE,qBAAC,OAAD;AACE,IAAA,SAAS,EAAEA;AADb,KAEMI,UAFN,GAGGL,QAHH,CADF;AAOD","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./packages/@react-aria/visually-hidden/src/VisuallyHidden.css","./packages/@react-aria/visually-hidden/src/VisuallyHidden.tsx"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n/* Hidden from visual browsers, but still accessible to screenreaders */\n.u-react-spectrum-screenReaderOnly {\n  border: 0;\n  clip: rect(0 0 0 0);\n  clip-path: inset(50%);\n  height: 1px;\n  margin: 0 -1px -1px 0;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n  white-space: nowrap;\n\n  &.is-focusable {\n    &:active,\n    &:focus {\n      clip: auto;\n      clip-path: none;\n      height: auto;\n      margin: inherit;\n      overflow: visible;\n      position: static;\n      width: auto;\n      white-space: inherit;\n    }\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport classNames from 'classnames';\nimport React, {HTMLAttributes, JSXElementConstructor, ReactNode} from 'react';\nimport styles from './VisuallyHidden.css';\n\ninterface VisuallyHiddenProps extends HTMLAttributes<HTMLElement> {\n  /** The content to visually hide. */\n  children: ReactNode,\n\n  /**\n   * The element type for the container.\n   * @default 'div'\n   */\n  elementType?: string | JSXElementConstructor<any>,\n\n  /** Whether the content can be focused. */\n  isFocusable?: boolean\n}\n\n/**\n * VisuallyHidden hides its children visually, while keeping content visible\n * to screen readers.\n */\nexport function VisuallyHidden(props: VisuallyHiddenProps) {\n  let {\n    children,\n    className,\n    elementType: Element = 'div',\n    isFocusable,\n    ...otherProps\n  } = props;\n\n  className = classNames(\n    styles['u-react-spectrum-screenReaderOnly'],\n    {[styles['is-focusable']]: isFocusable},\n    className\n  );\n\n  return (\n    <Element\n      className={className}\n      {...otherProps}>\n      {children}\n    </Element>\n  );\n}\n"],"names":["$parcel$interopDefault","a","__esModule","default","VisuallyHidden","props","children","className","elementType","Element","isFocusable","otherProps","classNames"],"version":3,"file":"module.js.map"}