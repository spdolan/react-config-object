import { useToggle } from "@react-aria/toggle";
import { useEffect } from "react";
import _babelRuntimeHelpersEsmExtends from "@babel/runtime/helpers/esm/extends";

/**
 * Provides the behavior and accessibility implementation for a checkbox component.
 * Checkboxes allow users to select multiple items from a list of individual items, or
 * to mark one individual item as selected.
 * @param props - Props for the checkbox.
 * @param state - State for the checkbox, as returned by `useToggleState`.
 * @param inputRef - A ref for the HTML input element.
 */
export function useCheckbox(props, state, inputRef) {
  let {
    inputProps
  } = useToggle(props, state, inputRef);
  let {
    isSelected
  } = state;
  let {
    isIndeterminate
  } = props;
  useEffect(() => {
    // indeterminate is a property, but it can only be set via javascript
    // https://css-tricks.com/indeterminate-checkboxes/
    if (inputRef.current) {
      inputRef.current.indeterminate = isIndeterminate;
    }
  });
  return {
    inputProps: _babelRuntimeHelpersEsmExtends({}, inputProps, {
      checked: isSelected,
      'aria-checked': isIndeterminate ? 'mixed' : isSelected
    })
  };
}
//# sourceMappingURL=module.js.map
