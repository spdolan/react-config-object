{"mappings":";;;;AAsBA;;;;;;;;OAQO,SAASA,WAAT,CAAqBC,KAArB,EAA+CC,KAA/C,EAAmEC,QAAnE,EAAwH;AAC7H,MAAI;AAACC,IAAAA;AAAD,MAAeC,SAAS,CAACJ,KAAD,EAAQC,KAAR,EAAeC,QAAf,CAA5B;AACA,MAAI;AAACG,IAAAA;AAAD,MAAeJ,KAAnB;AAEA,MAAI;AAACK,IAAAA;AAAD,MAAoBN,KAAxB;AACAO,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA,QAAIL,QAAQ,CAACM,OAAb,EAAsB;AACpBN,MAAAA,QAAQ,CAACM,OAAT,CAAiBC,aAAjB,GAAiCH,eAAjC;AACD;AACF,GANQ,CAAT;AAQA,SAAO;AACLH,IAAAA,UAAU,qCACLA,UADK;AAERO,MAAAA,OAAO,EAAEL,UAFD;AAGR,sBAAgBC,eAAe,GAAG,OAAH,GAAaD;AAHpC;AADL,GAAP;AAOD","sources":["./packages/@react-aria/checkbox/src/useCheckbox.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaCheckboxProps} from '@react-types/checkbox';\nimport {InputHTMLAttributes, RefObject, useEffect} from 'react';\nimport {ToggleState} from '@react-stately/toggle';\nimport {useToggle} from '@react-aria/toggle';\n\nexport interface CheckboxAria {\n  /** Props for the input element. */\n  inputProps: InputHTMLAttributes<HTMLInputElement>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a checkbox component.\n * Checkboxes allow users to select multiple items from a list of individual items, or\n * to mark one individual item as selected.\n * @param props - Props for the checkbox.\n * @param state - State for the checkbox, as returned by `useToggleState`.\n * @param inputRef - A ref for the HTML input element.\n */\nexport function useCheckbox(props: AriaCheckboxProps, state: ToggleState, inputRef: RefObject<HTMLInputElement>): CheckboxAria {\n  let {inputProps} = useToggle(props, state, inputRef);\n  let {isSelected} = state;\n\n  let {isIndeterminate} = props;\n  useEffect(() => {\n    // indeterminate is a property, but it can only be set via javascript\n    // https://css-tricks.com/indeterminate-checkboxes/\n    if (inputRef.current) {\n      inputRef.current.indeterminate = isIndeterminate;\n    }\n  });\n\n  return {\n    inputProps: {\n      ...inputProps,\n      checked: isSelected,\n      'aria-checked': isIndeterminate ? 'mixed' : isSelected\n    }\n  };\n}\n"],"names":["useCheckbox","props","state","inputRef","inputProps","useToggle","isSelected","isIndeterminate","useEffect","current","indeterminate","checked"],"version":3,"file":"module.js.map"}