import { useDOMRef, useSlotProps, useStyleProps } from "@react-spectrum/utils";
import _react, { forwardRef } from "react";
import { filterDOMProps, mergeProps } from "@react-aria/utils";
import _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
import _babelRuntimeHelpersEsmExtends from "@babel/runtime/helpers/esm/extends";

function $cd1d826835b2023780490c06384f98f$var$Text(props, ref) {
  props = useSlotProps(props, 'text');

  let {
    children
  } = props,
      otherProps = _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose(props, ["children"]);

  let {
    styleProps
  } = useStyleProps(otherProps);
  let domRef = useDOMRef(ref);
  return /*#__PURE__*/_react.createElement("span", _babelRuntimeHelpersEsmExtends({}, filterDOMProps(otherProps), styleProps, {
    ref: domRef
  }), children);
}
/**
 * Text represents text with no specific semantic meaning.
 */


export const Text = forwardRef($cd1d826835b2023780490c06384f98f$var$Text);
const $aa77dc2a68508e850218bafe906e5ce7$var$slotDOMProps = new Set(['aria-current']);

function $aa77dc2a68508e850218bafe906e5ce7$var$Heading(props, ref) {
  let slotProps = useSlotProps({}, 'heading');
  props = mergeProps(slotProps, props);
  let domProps = mergeProps(filterDOMProps(props), filterDOMProps(slotProps, {
    propNames: $aa77dc2a68508e850218bafe906e5ce7$var$slotDOMProps
  }));

  let {
    children,
    level = 3
  } = props,
      otherProps = _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose(props, ["children", "level"]);

  let {
    styleProps
  } = useStyleProps(otherProps);
  let domRef = useDOMRef(ref);
  let HeadingTag = "h" + level;
  return /*#__PURE__*/_react.createElement(HeadingTag, _babelRuntimeHelpersEsmExtends({}, domProps, styleProps, {
    ref: domRef
  }), children);
}
/**
 * Heading is used to create various levels of typographic hierarchies.
 */


export const Heading = forwardRef($aa77dc2a68508e850218bafe906e5ce7$var$Heading);

function $a9fec89ba8c4f7df5ed750bd9c0c7e3$var$Keyboard(props, ref) {
  props = useSlotProps(props, 'keyboard');

  let {
    children
  } = props,
      otherProps = _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose(props, ["children"]);

  let {
    styleProps
  } = useStyleProps(otherProps);
  let domRef = useDOMRef(ref);
  return /*#__PURE__*/_react.createElement("kbd", _babelRuntimeHelpersEsmExtends({}, filterDOMProps(otherProps), styleProps, {
    dir: "ltr",
    ref: domRef
  }), children);
}
/**
 * Keyboard represents text that specifies a keyboard command.
 */


export const Keyboard = forwardRef($a9fec89ba8c4f7df5ed750bd9c0c7e3$var$Keyboard);
//# sourceMappingURL=module.js.map
