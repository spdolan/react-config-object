{"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,sBAAT,CAAgCC,CAAhC,EAAmC;AACjC,SAAOA,CAAC,IAAIA,CAAC,CAACC,UAAP,GAAoBD,CAAC,CAACE,OAAtB,GAAgCF,CAAvC;AACD;;ACgBD,SAASG,sCAAT,CAAcC,KAAd,EAAgCC,GAAhC,EAA6C;AAC3CD,EAAAA,KAAK,GAAGE,YAAY,CAACF,KAAD,EAAQ,MAAR,CAApB;;AACA,MAAI;AACFG,IAAAA;AADE,MAGAH,KAHJ;AAAA,MAEKI,UAFL,oDAGIJ,KAHJ;;AAIA,MAAI;AAACK,IAAAA;AAAD,MAAeC,aAAa,CAACF,UAAD,CAAhC;AACA,MAAIG,MAAM,GAAGC,SAAS,CAACP,GAAD,CAAtB;AAEA,sBACE,6DAAUQ,cAAc,CAACL,UAAD,CAAxB,EAA0CC,UAA1C;AAAsD,IAAA,GAAG,EAAEE;AAA3D,MACGJ,QADH,CADF;AAKD;AAED;;;;;AAGA,MAAMO,IAAK,GAAGC,UAAU,CAACZ,sCAAD,CAAxB;;ACnBA,MAAMa,8CAAY,GAAG,IAAIC,GAAJ,CAAQ,CAAC,cAAD,CAAR,CAArB;;AAEA,SAASC,yCAAT,CAAiBd,KAAjB,EAAsCC,GAAtC,EAAuE;AACrE,MAAIc,SAAS,GAAGb,YAAY,CAAC,EAAD,EAAK,SAAL,CAA5B;AACAF,EAAAA,KAAK,GAAGgB,UAAU,CAACD,SAAD,EAAYf,KAAZ,CAAlB;AAEA,MAAIiB,QAAQ,GAAGD,UAAU,CACvBP,cAAc,CAACT,KAAD,CADS,EAEvBS,cAAc,CAACM,SAAD,EAAY;AAACG,IAAAA,SAAS,EAAEN;AAAZ,GAAZ,CAFS,CAAzB;;AAKA,MAAI;AACFT,IAAAA,QADE;AAEFgB,IAAAA,KAAK,GAAG;AAFN,MAIAnB,KAJJ;AAAA,MAGKI,UAHL,oDAIIJ,KAJJ;;AAKA,MAAI;AAACK,IAAAA;AAAD,MAAeC,aAAa,CAACF,UAAD,CAAhC;AACA,MAAIG,MAAM,GAAGC,SAAS,CAACP,GAAD,CAAtB;AACA,MAAImB,UAAU,SAAOD,KAArB;AAEA,sBACE,qBAAC,UAAD,kCAAgBF,QAAhB,EAA8BZ,UAA9B;AAA0C,IAAA,GAAG,EAAEE;AAA/C,MACGJ,QADH,CADF;AAKD;AAED;;;;;AAGA,MAAMkB,OAAQ,GAAGV,UAAU,CAACG,yCAAD,CAA3B;;;AC9BA,SAASQ,yCAAT,CAAkBtB,KAAlB,EAAwCC,GAAxC,EAAqD;AACnDD,EAAAA,KAAK,GAAGE,YAAY,CAACF,KAAD,EAAQ,UAAR,CAApB;;AACA,MAAI;AACFG,IAAAA;AADE,MAGAH,KAHJ;AAAA,MAEKI,UAFL,oDAGIJ,KAHJ;;AAIA,MAAI;AAACK,IAAAA;AAAD,MAAeC,aAAa,CAACF,UAAD,CAAhC;AACA,MAAIG,MAAM,GAAGC,SAAS,CAACP,GAAD,CAAtB;AAEA,sBACE,4DAASQ,cAAc,CAACL,UAAD,CAAvB,EAAyCC,UAAzC;AAAqD,IAAA,GAAG,EAAC,KAAzD;AAA+D,IAAA,GAAG,EAAEE;AAApE,MACGJ,QADH,CADF;AAKD;AAED;;;;;AAGA,MAAMoB,QAAS,GAAGZ,UAAU,CAACW,yCAAD,CAA5B","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./packages/@react-spectrum/text/src/Text.tsx","./packages/@react-spectrum/text/src/Heading.tsx","./packages/@react-spectrum/text/src/Keyboard.tsx"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMRef} from '@react-types/shared';\nimport {filterDOMProps} from '@react-aria/utils';\nimport React, {forwardRef} from 'react';\nimport {TextProps} from '@react-types/text';\nimport {useDOMRef, useSlotProps, useStyleProps} from '@react-spectrum/utils';\n\nfunction Text(props: TextProps, ref: DOMRef) {\n  props = useSlotProps(props, 'text');\n  let {\n    children,\n    ...otherProps\n  } = props;\n  let {styleProps} = useStyleProps(otherProps);\n  let domRef = useDOMRef(ref);\n\n  return (\n    <span {...filterDOMProps(otherProps)} {...styleProps} ref={domRef}>\n      {children}\n    </span>\n  );\n}\n\n/**\n * Text represents text with no specific semantic meaning.\n */\nconst _Text = forwardRef(Text);\nexport {_Text as Text};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMRef} from '@react-types/shared';\nimport {filterDOMProps, mergeProps} from '@react-aria/utils';\nimport {HeadingProps} from '@react-types/text';\nimport React, {ElementType, forwardRef} from 'react';\nimport {useDOMRef, useSlotProps, useStyleProps} from '@react-spectrum/utils';\n\nconst slotDOMProps = new Set(['aria-current']);\n\nfunction Heading(props: HeadingProps, ref: DOMRef<HTMLHeadingElement>) {\n  let slotProps = useSlotProps({}, 'heading');\n  props = mergeProps(slotProps, props);\n\n  let domProps = mergeProps(\n    filterDOMProps(props),\n    filterDOMProps(slotProps, {propNames: slotDOMProps})\n  );\n\n  let {\n    children,\n    level = 3,\n    ...otherProps\n  } = props;\n  let {styleProps} = useStyleProps(otherProps);\n  let domRef = useDOMRef(ref);\n  let HeadingTag = `h${level}` as ElementType;\n\n  return (\n    <HeadingTag {...domProps} {...styleProps} ref={domRef}>\n      {children}\n    </HeadingTag>\n  );\n}\n\n/**\n * Heading is used to create various levels of typographic hierarchies.\n */\nconst _Heading = forwardRef(Heading);\nexport {_Heading as Heading};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMRef} from '@react-types/shared';\nimport {filterDOMProps} from '@react-aria/utils';\nimport {KeyboardProps} from '@react-types/text';\nimport React, {forwardRef} from 'react';\nimport {useDOMRef, useSlotProps, useStyleProps} from '@react-spectrum/utils';\n\nfunction Keyboard(props: KeyboardProps, ref: DOMRef) {\n  props = useSlotProps(props, 'keyboard');\n  let {\n    children,\n    ...otherProps\n  } = props;\n  let {styleProps} = useStyleProps(otherProps);\n  let domRef = useDOMRef(ref);\n\n  return (\n    <kbd {...filterDOMProps(otherProps)} {...styleProps} dir=\"ltr\" ref={domRef}>\n      {children}\n    </kbd>\n  );\n}\n\n/**\n * Keyboard represents text that specifies a keyboard command.\n */\nconst _Keyboard = forwardRef(Keyboard);\nexport {_Keyboard as Keyboard};\n"],"names":["$parcel$interopDefault","a","__esModule","default","Text","props","ref","useSlotProps","children","otherProps","styleProps","useStyleProps","domRef","useDOMRef","filterDOMProps","_Text","forwardRef","slotDOMProps","Set","Heading","slotProps","mergeProps","domProps","propNames","level","HeadingTag","_Heading","Keyboard","_Keyboard"],"version":3,"file":"main.js.map"}