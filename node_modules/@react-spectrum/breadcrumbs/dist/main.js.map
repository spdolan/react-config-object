{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./node_modules/@adobe/spectrum-css-temp/components/breadcrumb/vars.css","./packages/@react-spectrum/breadcrumbs/src/BreadcrumbItem.tsx","./packages/@react-spectrum/breadcrumbs/src/Breadcrumbs.tsx"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {BreadcrumbItemProps} from '@react-types/breadcrumbs';\nimport ChevronRightSmall from '@spectrum-icons/ui/ChevronRightSmall';\nimport {classNames, getWrappedElement} from '@react-spectrum/utils';\nimport {FocusRing} from '@react-aria/focus';\nimport {mergeProps} from '@react-aria/utils';\nimport React, {Fragment, useRef} from 'react';\nimport styles from '@adobe/spectrum-css-temp/components/breadcrumb/vars.css';\nimport {useBreadcrumbItem} from '@react-aria/breadcrumbs';\nimport {useHover} from '@react-aria/interactions';\nimport {useLocale} from '@react-aria/i18n';\n\nexport function BreadcrumbItem(props: BreadcrumbItemProps) {\n  let {\n    children,\n    isCurrent,\n    isDisabled\n  } = props;\n\n  let {direction} = useLocale();\n  let ref = useRef();\n  let {itemProps} = useBreadcrumbItem({\n    ...props,\n    elementType: typeof children === 'string' ? 'span' : 'a'\n  }, ref);\n  let {hoverProps, isHovered} = useHover(props);\n\n  let element = React.cloneElement(\n    getWrappedElement(children),\n    {\n      ...mergeProps(itemProps, hoverProps),\n      ref,\n      className:\n        classNames(\n          styles,\n          'spectrum-Breadcrumbs-itemLink',\n          {\n            'is-disabled': !isCurrent && isDisabled,\n            'is-hovered': isHovered\n          }\n        )\n    }\n  );\n\n  return (\n    <Fragment>\n      <FocusRing focusRingClass={classNames(styles, 'focus-ring')}>\n        {element}\n      </FocusRing>\n      {isCurrent === false &&\n        <ChevronRightSmall\n          UNSAFE_className={\n            classNames(\n              styles,\n              'spectrum-Breadcrumbs-itemSeparator',\n              {\n                'is-reversed': direction === 'rtl'\n              }\n            )\n          } />\n      }\n    </Fragment>\n  );\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {ActionButton} from '@react-spectrum/button';\nimport {BreadcrumbItem} from './BreadcrumbItem';\nimport {classNames, useDOMRef, useStyleProps} from '@react-spectrum/utils';\nimport {DOMRef} from '@react-types/shared';\nimport FolderBreadcrumb from '@spectrum-icons/ui/FolderBreadcrumb';\nimport {Menu, MenuTrigger} from '@react-spectrum/menu';\nimport React, {Key, ReactElement, useCallback, useEffect, useLayoutEffect, useRef, useState} from 'react';\nimport {SpectrumBreadcrumbsProps} from '@react-types/breadcrumbs';\nimport styles from '@adobe/spectrum-css-temp/components/breadcrumb/vars.css';\nimport {useBreadcrumbs} from '@react-aria/breadcrumbs';\nimport {useProviderProps} from '@react-spectrum/provider';\n\nconst MIN_VISIBLE_ITEMS = 1;\nconst MAX_VISIBLE_ITEMS = 4;\n\nfunction Breadcrumbs<T>(props: SpectrumBreadcrumbsProps<T>, ref: DOMRef) {\n  props = useProviderProps(props);\n  let {\n    size = 'L',\n    isMultiline,\n    children,\n    showRoot,\n    isDisabled,\n    onAction,\n    ...otherProps\n  } = props;\n\n  // Not using React.Children.toArray because it mutates the key prop.\n  let childArray: ReactElement[] = [];\n  React.Children.forEach(children, child => {\n    if (React.isValidElement(child)) {\n      childArray.push(child);\n    }\n  });\n\n  let domRef = useDOMRef(ref);\n  let listRef = useRef<HTMLUListElement>(null);\n\n  let [visibleItems, setVisibleItems] = useValueEffect(childArray.length);\n\n  let {navProps} = useBreadcrumbs(props);\n  let {styleProps} = useStyleProps(otherProps);\n\n  let updateOverflow = useCallback(() => {\n    let computeVisibleItems = (visibleItems: number) => {\n      let listItems = Array.from(listRef.current.children) as HTMLLIElement[];\n      let containerWidth = listRef.current.offsetWidth;\n      let isShowingMenu = childArray.length > visibleItems;\n      let calculatedWidth = 0;\n      let newVisibleItems = 0;\n      let maxVisibleItems = MAX_VISIBLE_ITEMS;\n\n      if (showRoot) {\n        calculatedWidth += listItems.shift().offsetWidth;\n        newVisibleItems++;\n      }\n\n      if (isShowingMenu) {\n        calculatedWidth += listItems.shift().offsetWidth;\n        maxVisibleItems--;\n      }\n\n      if (showRoot && calculatedWidth >= containerWidth) {\n        newVisibleItems--;\n      }\n\n      // TODO: what if multiline and only one breadcrumb??\n      if (isMultiline) {\n        listItems.pop();\n        newVisibleItems++;\n      } else {\n        // Ensure the last breadcrumb isn't truncated when we measure it.\n        let last = listItems.pop();\n        last.style.overflow = 'visible';\n\n        calculatedWidth += last.offsetWidth;\n        if (calculatedWidth < containerWidth) {\n          newVisibleItems++;\n        }\n\n        last.style.overflow = '';\n      }\n\n      for (let breadcrumb of listItems.reverse()) {\n        calculatedWidth += breadcrumb.offsetWidth;\n        if (calculatedWidth < containerWidth) {\n          newVisibleItems++;\n        }\n      }\n\n      return Math.max(MIN_VISIBLE_ITEMS, Math.min(maxVisibleItems, newVisibleItems));\n    };\n\n    setVisibleItems(function *() {\n      // Update to show all items.\n      yield childArray.length;\n\n      // Measure, and update to show the items that fit.\n      let newVisibleItems = computeVisibleItems(childArray.length);\n      yield newVisibleItems;\n\n      // If the number of items is less than the number of children,\n      // then update again to ensure that the menu fits.\n      if (newVisibleItems < childArray.length && newVisibleItems > 1) {\n        yield computeVisibleItems(newVisibleItems);\n      }\n    });\n  }, [listRef, children, setVisibleItems, showRoot, isMultiline]);\n\n  useEffect(() => {\n    window.addEventListener('resize', updateOverflow, false);\n    return () => {\n      window.removeEventListener('resize', updateOverflow, false);\n    };\n  }, [updateOverflow]);\n\n  useLayoutEffect(updateOverflow, [children]);\n\n  let contents = childArray;\n  if (childArray.length > visibleItems) {\n    let selectedItem = childArray[childArray.length - 1];\n    let selectedKey = selectedItem.key ?? childArray.length - 1;\n    let onMenuAction = (key: Key) => {\n      // Don't fire onAction when clicking on the last item\n      if (key !== selectedKey && onAction) {\n        onAction(key);\n      }\n    };\n\n    let menuItem = (\n      <BreadcrumbItem key=\"menu\">\n        <MenuTrigger>\n          <ActionButton\n            aria-label=\"…\"\n            isQuiet\n            isDisabled={isDisabled}>\n            <FolderBreadcrumb />\n          </ActionButton>\n          <Menu selectionMode=\"single\" selectedKeys={[selectedKey]} onAction={onMenuAction}>\n            {childArray}\n          </Menu>\n        </MenuTrigger>\n      </BreadcrumbItem>\n    );\n\n    contents = [menuItem];\n    let breadcrumbs = [...childArray];\n    let endItems = visibleItems;\n    if (showRoot && visibleItems > 1) {\n      contents.unshift(breadcrumbs.shift());\n      endItems--;\n    }\n    contents.push(...breadcrumbs.slice(-endItems));\n  }\n\n  let lastIndex = contents.length - 1;\n  let breadcrumbItems = contents.map((child, index) => {\n    let isCurrent = index === lastIndex;\n    let key = child.key ?? index;\n    let onPress = () => {\n      if (onAction) {\n        onAction(key);\n      }\n    };\n\n    return (\n      <li\n        key={key}\n        className={\n          classNames(\n            styles,\n            'spectrum-Breadcrumbs-item'\n          )\n        }>\n        <BreadcrumbItem\n          isCurrent={isCurrent}\n          isDisabled={isDisabled}\n          onPress={onPress}>\n          {child.props.children}\n        </BreadcrumbItem>\n      </li>\n    );\n  });\n\n  return (\n    <nav\n      {...styleProps}\n      {...navProps}\n      ref={domRef}>\n      <ul\n        ref={listRef}\n        className={\n          classNames(\n            styles,\n            'spectrum-Breadcrumbs',\n            {\n              'spectrum-Breadcrumbs--small': size === 'S',\n              'spectrum-Breadcrumbs--medium': size === 'M',\n              'spectrum-Breadcrumbs--multiline': isMultiline,\n              'spectrum-Breadcrumbs--showRoot': showRoot,\n              'is-disabled': isDisabled\n            },\n            styleProps.className\n          )\n        }>\n        {breadcrumbItems}\n      </ul>\n    </nav>\n  );\n}\n\n// This hook works like `useState`, but when setting the value, you pass a generator function\n// that can yield multiple values. Each yielded value updates the state and waits for the next\n// layout effect, then continues the generator. This allows sequential updates to state to be\n// written linearly.\nfunction useValueEffect(defaultValue) {\n  let [value, setValue] = useState(defaultValue);\n  let effect = useRef(null);\n\n  // Store the function in a ref so we can always access the current version\n  // which has the proper `value` in scope.\n  let nextRef = useRef(null);\n  nextRef.current = () => {\n    // Run the generator to the next yield.\n    let newValue = effect.current.next();\n\n    // If the generator is done, reset the effect.\n    if (newValue.done) {\n      effect.current = null;\n      return;\n    }\n\n    // If the value is the same as the current value,\n    // then continue to the next yield. Otherwise,\n    // set the value in state and wait for the next layout effect.\n    if (value === newValue.value) {\n      nextRef.current();\n    } else {\n      setValue(newValue.value);\n    }\n  };\n\n  useLayoutEffect(() => {\n    // If there is an effect currently running, continue to the next yield.\n    if (effect.current) {\n      nextRef.current();\n    }\n  });\n\n  let queue = useCallback(fn => {\n    effect.current = fn();\n    nextRef.current();\n  }, [effect, nextRef]);\n\n  return [value, queue];\n}\n\n/**\n * Breadcrumbs show hierarchy and navigational context for a user’s location within an application.\n */\nlet _Breadcrumbs = React.forwardRef(Breadcrumbs);\nexport {_Breadcrumbs as Breadcrumbs};\n"],"names":["$parcel$interopDefault","a","__esModule","default","BreadcrumbItem","props","children","isCurrent","isDisabled","direction","useLocale","ref","useRef","itemProps","useBreadcrumbItem","elementType","hoverProps","isHovered","useHover","element","React","cloneElement","getWrappedElement","mergeProps","className","classNames","MIN_VISIBLE_ITEMS","MAX_VISIBLE_ITEMS","Breadcrumbs","useProviderProps","size","isMultiline","showRoot","onAction","otherProps","childArray","Children","forEach","child","isValidElement","push","domRef","useDOMRef","listRef","visibleItems","setVisibleItems","useValueEffect","length","navProps","useBreadcrumbs","styleProps","useStyleProps","updateOverflow","useCallback","computeVisibleItems","listItems","Array","from","current","containerWidth","offsetWidth","isShowingMenu","calculatedWidth","newVisibleItems","maxVisibleItems","shift","pop","last","style","overflow","breadcrumb","reverse","Math","max","min","useEffect","window","addEventListener","removeEventListener","useLayoutEffect","contents","selectedItem","selectedKey","key","onMenuAction","menuItem","breadcrumbs","endItems","unshift","slice","lastIndex","breadcrumbItems","map","index","onPress","defaultValue","value","setValue","useState","effect","nextRef","newValue","next","done","queue","fn","_Breadcrumbs","forwardRef"],"version":3,"file":"main.js.map"}