{"mappings":";;;;;;;;;;;;;AAAA,SAASA,sBAAT,CAAgCC,CAAhC,EAAmC;AACjC,SAAOA,CAAC,IAAIA,CAAC,CAACC,UAAP,GAAoBD,CAAC,CAACE,OAAtB,GAAgCF,CAAvC;AACD;;;;ACFD,2CAAiB;AACf,uBAAqB,0BADN;AAEf,6BAA2B,gCAFZ;AAGf,gBAAc,mBAHC;AAIf,2BAAyB,8BAJV;AAKf,sBAAoB,yBALL;AAMf,iCAA+B,oCANhB;AAOf,wCAAsC,2CAPvB;AAQf,gBAAc,mBARC;AASf,6BAA2B,gCATZ;AAUf,gBAAc,mBAVC;AAWf,8BAA4B,iCAXb;AAYf,gBAAc;AAZC,CAAjB;;;ACyBA,SAASG,2CAAT,CAAkBC,KAAlB,EAAgDC,GAAhD,EAAqF;AACnFD,EAAAA,KAAK,GAAGE,gBAAgB,CAACF,KAAD,CAAxB;;AACA,MAAI;AACFG,IAAAA,eAAe,GAAG,KADhB;AAEFC,IAAAA,YAAY,GAAG,KAFb;AAGFC,IAAAA,UAAU,GAAG,KAHX;AAIFC,IAAAA,SAJE;AAKFC,IAAAA;AALE,MAOAP,KAPJ;AAAA,MAMKQ,UANL,uDAOIR,KAPJ;;AAQA,MAAI;AAACS,IAAAA;AAAD,MAAeC,aAAa,CAACF,UAAD,CAAhC;AACA,MAAI;AAACG,IAAAA,UAAD;AAAaC,IAAAA;AAAb,MAA0BC,QAAQ,CAAC;AAACR,IAAAA;AAAD,GAAD,CAAtC;AAEA,MAAIS,QAAQ,GAAGC,MAAM,CAAmB,IAAnB,CAArB;AACA,MAAIC,MAAM,GAAGC,eAAe,CAAChB,GAAD,EAAMa,QAAN,CAA5B;AACA,MAAII,KAAK,GAAGC,cAAc,CAACnB,KAAD,CAA1B;AACA,MAAI;AAACoB,IAAAA;AAAD,MAAeC,WAAW,CAACrB,KAAD,EAAQkB,KAAR,EAAeJ,QAAf,CAA9B;AAEA,MAAIQ,QAAQ,GAAGnB,eAAe,gBAC1B,qBAAC,yBAAD;AAAW,IAAA,gBAAgB,EAAEoB,UAAU,oDAAS,oCAAT;AAAvC,IAD0B,gBAE1B,qBAAC,8BAAD;AAAgB,IAAA,gBAAgB,EAAEA,UAAU,oDAAS,6BAAT;AAA5C,IAFJ;AAIA,sBACE,iEACMd,UADN,EAEME,UAFN;AAGE,IAAA,GAAG,EAAEK,MAHP;AAIE,IAAA,SAAS,EACPO,UAAU,oDAER,mBAFQ,EAGR;AACE,oBAAcL,KAAK,CAACM,UADtB;AAEE,0BAAoBrB,eAFtB;AAGE,kCAA4B,CAACC,YAH/B;AAIE,oBAAcgB,UAAU,CAAC,cAAD,CAJ1B;AAKE,qBAAef,UALjB;AAME,oBAAcO;AANhB,KAHQ,EAWRH,UAAU,CAACgB,SAXH;AALd,mBAmBE,qBAAC,SAAD;AAAW,IAAA,cAAc,EAAEF,UAAU,oDAAS,YAAT,CAArC;AAA6D,IAAA,SAAS,EAAEjB;AAAxE,kBACE,iEACMc,UADN;AAEE,IAAA,GAAG,EAAEN,QAFP;AAGE,IAAA,SAAS,EAAES,UAAU,oDAAS,yBAAT;AAHvB,KADF,CAnBF,eAyBE;AAAM,IAAA,SAAS,EAAEA,UAAU,oDAAS,uBAAT;AAA3B,KAA+DD,QAA/D,CAzBF,EA0BGf,QAAQ,iBACP;AAAM,IAAA,SAAS,EAAEgB,UAAU,oDAAS,yBAAT;AAA3B,KACGhB,QADH,CA3BJ,CADF;AAkCD;AACD;;;;;;OAIA,IAAImB,QAAS,GAAGC,UAAU,CAAC5B,2CAAD,CAA1B","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./node_modules/@adobe/spectrum-css-temp/components/checkbox/vars.css","./packages/@react-spectrum/checkbox/src/Checkbox.tsx"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport CheckmarkSmall from '@spectrum-icons/ui/CheckmarkSmall';\nimport {classNames, useFocusableRef, useStyleProps} from '@react-spectrum/utils';\nimport DashSmall from '@spectrum-icons/ui/DashSmall';\nimport {FocusableRef} from '@react-types/shared';\nimport {FocusRing} from '@react-aria/focus';\nimport React, {forwardRef, useRef} from 'react';\nimport {SpectrumCheckboxProps} from '@react-types/checkbox';\nimport styles from '@adobe/spectrum-css-temp/components/checkbox/vars.css';\nimport {useCheckbox} from '@react-aria/checkbox';\nimport {useHover} from '@react-aria/interactions';\nimport {useProviderProps} from '@react-spectrum/provider';\nimport {useToggleState} from '@react-stately/toggle';\n\nfunction Checkbox(props: SpectrumCheckboxProps, ref: FocusableRef<HTMLLabelElement>) {\n  props = useProviderProps(props);\n  let {\n    isIndeterminate = false,\n    isEmphasized = false,\n    isDisabled = false,\n    autoFocus,\n    children,\n    ...otherProps\n  } = props;\n  let {styleProps} = useStyleProps(otherProps);\n  let {hoverProps, isHovered} = useHover({isDisabled});\n\n  let inputRef = useRef<HTMLInputElement>(null);\n  let domRef = useFocusableRef(ref, inputRef);\n  let state = useToggleState(props);\n  let {inputProps} = useCheckbox(props, state, inputRef);\n\n  let markIcon = isIndeterminate\n    ? <DashSmall UNSAFE_className={classNames(styles, 'spectrum-Checkbox-partialCheckmark')} />\n    : <CheckmarkSmall UNSAFE_className={classNames(styles, 'spectrum-Checkbox-checkmark')} />;\n\n  return (\n    <label\n      {...styleProps}\n      {...hoverProps}\n      ref={domRef}\n      className={\n        classNames(\n          styles,\n          'spectrum-Checkbox',\n          {\n            'is-checked': state.isSelected,\n            'is-indeterminate': isIndeterminate,\n            'spectrum-Checkbox--quiet': !isEmphasized,\n            'is-invalid': inputProps['aria-invalid'],\n            'is-disabled': isDisabled,\n            'is-hovered': isHovered\n          },\n          styleProps.className\n        )\n      }>\n      <FocusRing focusRingClass={classNames(styles, 'focus-ring')} autoFocus={autoFocus}>\n        <input\n          {...inputProps}\n          ref={inputRef}\n          className={classNames(styles, 'spectrum-Checkbox-input')} />\n      </FocusRing>\n      <span className={classNames(styles, 'spectrum-Checkbox-box')}>{markIcon}</span>\n      {children && (\n        <span className={classNames(styles, 'spectrum-Checkbox-label')}>\n          {children}\n        </span>\n      )}\n    </label>\n  );\n}\n/**\n * Checkboxes allow users to select multiple items from a list of individual items,\n * or to mark one individual item as selected.\n */\nlet _Checkbox = forwardRef(Checkbox);\nexport {_Checkbox as Checkbox};\n"],"names":["$parcel$interopDefault","a","__esModule","default","Checkbox","props","ref","useProviderProps","isIndeterminate","isEmphasized","isDisabled","autoFocus","children","otherProps","styleProps","useStyleProps","hoverProps","isHovered","useHover","inputRef","useRef","domRef","useFocusableRef","state","useToggleState","inputProps","useCheckbox","markIcon","classNames","isSelected","className","_Checkbox","forwardRef"],"version":3,"file":"module.js.map"}