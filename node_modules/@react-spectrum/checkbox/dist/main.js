var {
  useToggleState
} = require("@react-stately/toggle");

var {
  useProviderProps
} = require("@react-spectrum/provider");

var {
  useHover
} = require("@react-aria/interactions");

var {
  useCheckbox
} = require("@react-aria/checkbox");

var _react2 = require("react");

var _react = $parcel$interopDefault(_react2);

var {
  forwardRef,
  useRef
} = _react2;

var {
  FocusRing
} = require("@react-aria/focus");

var _spectrumIconsUiDashSmall = $parcel$interopDefault(require("@spectrum-icons/ui/DashSmall"));

var {
  classNames,
  useFocusableRef,
  useStyleProps
} = require("@react-spectrum/utils");

var _spectrumIconsUiCheckmarkSmall = $parcel$interopDefault(require("@spectrum-icons/ui/CheckmarkSmall"));

var _babelRuntimeHelpersObjectWithoutPropertiesLoose = $parcel$interopDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _babelRuntimeHelpersExtends = $parcel$interopDefault(require("@babel/runtime/helpers/extends"));

require("./main.css");

function $parcel$interopDefault(a) {
  return a && a.__esModule ? a.default : a;
}

// ASSET: /Users/govett/dev/react-spectrum-v3/node_modules/@adobe/spectrum-css-temp/components/checkbox/vars.css
var $f422de1cb0c29c9cbeca4791adca989$exports = {};
$f422de1cb0c29c9cbeca4791adca989$exports = {
  "spectrum-Checkbox": "_spectrum-Checkbox_0ffa4",
  "spectrum-Checkbox-input": "_spectrum-Checkbox-input_0ffa4",
  "focus-ring": "_focus-ring_0ffa4",
  "spectrum-Checkbox-box": "_spectrum-Checkbox-box_0ffa4",
  "is-indeterminate": "_is-indeterminate_0ffa4",
  "spectrum-Checkbox-checkmark": "_spectrum-Checkbox-checkmark_0ffa4",
  "spectrum-Checkbox-partialCheckmark": "_spectrum-Checkbox-partialCheckmark_0ffa4",
  "is-checked": "_is-checked_0ffa4",
  "spectrum-Checkbox-label": "_spectrum-Checkbox-label_0ffa4",
  "is-hovered": "_is-hovered_0ffa4",
  "spectrum-Checkbox--quiet": "_spectrum-Checkbox--quiet_0ffa4",
  "is-invalid": "_is-invalid_0ffa4"
};
var $f422de1cb0c29c9cbeca4791adca989$$interop$default = $parcel$interopDefault($f422de1cb0c29c9cbeca4791adca989$exports);

function $c3b2eaa0f618cced51a19c0a61137bb$var$Checkbox(props, ref) {
  props = useProviderProps(props);

  let {
    isIndeterminate = false,
    isEmphasized = false,
    isDisabled = false,
    autoFocus,
    children
  } = props,
      otherProps = _babelRuntimeHelpersObjectWithoutPropertiesLoose(props, ["isIndeterminate", "isEmphasized", "isDisabled", "autoFocus", "children"]);

  let {
    styleProps
  } = useStyleProps(otherProps);
  let {
    hoverProps,
    isHovered
  } = useHover({
    isDisabled
  });
  let inputRef = useRef(null);
  let domRef = useFocusableRef(ref, inputRef);
  let state = useToggleState(props);
  let {
    inputProps
  } = useCheckbox(props, state, inputRef);
  let markIcon = isIndeterminate ? /*#__PURE__*/_react.createElement(_spectrumIconsUiDashSmall, {
    UNSAFE_className: classNames($f422de1cb0c29c9cbeca4791adca989$$interop$default, 'spectrum-Checkbox-partialCheckmark')
  }) : /*#__PURE__*/_react.createElement(_spectrumIconsUiCheckmarkSmall, {
    UNSAFE_className: classNames($f422de1cb0c29c9cbeca4791adca989$$interop$default, 'spectrum-Checkbox-checkmark')
  });
  return /*#__PURE__*/_react.createElement("label", _babelRuntimeHelpersExtends({}, styleProps, hoverProps, {
    ref: domRef,
    className: classNames($f422de1cb0c29c9cbeca4791adca989$$interop$default, 'spectrum-Checkbox', {
      'is-checked': state.isSelected,
      'is-indeterminate': isIndeterminate,
      'spectrum-Checkbox--quiet': !isEmphasized,
      'is-invalid': inputProps['aria-invalid'],
      'is-disabled': isDisabled,
      'is-hovered': isHovered
    }, styleProps.className)
  }), /*#__PURE__*/_react.createElement(FocusRing, {
    focusRingClass: classNames($f422de1cb0c29c9cbeca4791adca989$$interop$default, 'focus-ring'),
    autoFocus: autoFocus
  }, /*#__PURE__*/_react.createElement("input", _babelRuntimeHelpersExtends({}, inputProps, {
    ref: inputRef,
    className: classNames($f422de1cb0c29c9cbeca4791adca989$$interop$default, 'spectrum-Checkbox-input')
  }))), /*#__PURE__*/_react.createElement("span", {
    className: classNames($f422de1cb0c29c9cbeca4791adca989$$interop$default, 'spectrum-Checkbox-box')
  }, markIcon), children && /*#__PURE__*/_react.createElement("span", {
    className: classNames($f422de1cb0c29c9cbeca4791adca989$$interop$default, 'spectrum-Checkbox-label')
  }, children));
}
/**
 * Checkboxes allow users to select multiple items from a list of individual items,
 * or to mark one individual item as selected.
 */


let Checkbox = forwardRef($c3b2eaa0f618cced51a19c0a61137bb$var$Checkbox);
exports.Checkbox = Checkbox;
//# sourceMappingURL=main.js.map
