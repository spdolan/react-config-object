{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,sBAAT,CAAgCC,CAAhC,EAAmC;AACjC,SAAOA,CAAC,IAAIA,CAAC,CAACC,UAAP,GAAoBD,CAAC,CAACE,OAAtB,GAAgCF,CAAvC;AACD;;;;ACFD,4CAAiB;AACf,qBAAmB,wBADJ;AAEf,0BAAwB,6BAFT;AAGf,cAAY,iBAHG;AAIf,2BAAyB,8BAJV;AAKf,0BAAwB,6BALT;AAMf,gBAAc,mBANC;AAOf,gBAAc;AAPC,CAAjB;;;ACwBA,SAASG,2CAAT,CAAqBC,KAArB,EAAsDC,GAAtD,EAAoF;AAClFD,EAAAA,KAAK,GAAGE,gBAAgB,CAACF,KAAD,CAAxB;;AACA,MAAIG,WAAW,gBACb,qBAAC,yBAAD;AAEE,IAAA,gBAAgB,EACdC,UAAU,qDAER,sBAFQ;AAHd,IADF;;AAWA,MAAI;AACFC,IAAAA,IAAI,GAAGF,WADL;AAEFG,IAAAA,UAFE;AAGFC,IAAAA;AAHE,MAKAP,KALJ;AAAA,MAIKQ,UAJL,oDAKIR,KALJ;;AAOA,MAAIS,KAAK,GAAGC,mBAAmB,CAACV,KAAD,CAA/B;AACA,MAAIW,QAAQ,GAAGC,MAAM,EAArB;AACA,MAAI;AAACC,IAAAA,UAAD;AAAaC,IAAAA,UAAb;AAAyBC,IAAAA;AAAzB,MAA6CC,cAAc,CAAChB,KAAD,EAAQS,KAAR,EAAeE,QAAf,CAA/D;;AAEA,MAAIM,WAAW,gBACb,qBAAC,WAAD,kCACMF,gBADN;AAEE,IAAA,gBAAgB,EACdX,UAAU,qDAER,sBAFQ,CAHd;AAQE,IAAA,UAAU,EAAEE;AARd,KADF,CAxBkF,CAoClF;;;AACA,sBACE,qBAAC,aAAD,kCACME,UADN;AAEE,IAAA,UAAU,EAAEK,UAFd;AAGE,IAAA,UAAU,EAAEC,UAHd;AAIE,IAAA,gBAAgB,EACdV,UAAU,qDAER,iBAFQ,EAGR;AACE,qBAAeE,UADjB;AAEE,kBAAYN,KAAK,CAACkB;AAFpB,KAHQ,EAORX,gBAPQ,CALd;AAeE,IAAA,cAAc,EAAEH,UAAU,qDAAS,uBAAT,CAf5B;AAgBE,IAAA,GAAG,EAAEH,GAhBP;AAiBE,IAAA,QAAQ,EAAEU,QAjBZ;AAkBE,IAAA,UAAU,EAAEL,UAlBd;AAmBE,IAAA,IAAI,EAAED,IAnBR;AAoBE,IAAA,eAAe,EAAGI,KAAK,CAACU,KAAN,KAAgB,EAAhB,IAAsB,CAACnB,KAAK,CAACoB,UAA9B,IAA6CH;AApBhE,KADF;AAuBD;AAED;;;;;AAGA,IAAII,WAAY,GAAGC,UAAU,CAACvB,2CAAD,CAA7B","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./node_modules/@adobe/spectrum-css-temp/components/search/vars.css","./packages/@react-spectrum/searchfield/src/SearchField.tsx"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames} from '@react-spectrum/utils';\nimport {ClearButton} from '@react-spectrum/button';\nimport Magnifier from '@spectrum-icons/ui/Magnifier';\nimport React, {forwardRef, RefObject, useRef} from 'react';\nimport {SpectrumSearchFieldProps} from '@react-types/searchfield';\nimport styles from '@adobe/spectrum-css-temp/components/search/vars.css';\nimport {TextFieldBase} from '@react-spectrum/textfield';\nimport {TextFieldRef} from '@react-types/textfield';\nimport {useProviderProps} from '@react-spectrum/provider';\nimport {useSearchField} from '@react-aria/searchfield';\nimport {useSearchFieldState} from '@react-stately/searchfield';\n\nfunction SearchField(props: SpectrumSearchFieldProps, ref: RefObject<TextFieldRef>) {\n  props = useProviderProps(props);\n  let defaultIcon = (\n    <Magnifier\n      data-testid=\"searchicon\"\n      UNSAFE_className={\n        classNames(\n          styles,\n          'spectrum-Search-icon'\n        )\n      } />\n  );\n\n  let {\n    icon = defaultIcon,\n    isDisabled,\n    UNSAFE_className,\n    ...otherProps\n  } = props;\n\n  let state = useSearchFieldState(props);\n  let inputRef = useRef<HTMLInputElement & HTMLTextAreaElement>();\n  let {labelProps, inputProps, clearButtonProps} = useSearchField(props, state, inputRef);\n\n  let clearButton = (\n    <ClearButton\n      {...clearButtonProps}\n      UNSAFE_className={\n        classNames(\n          styles,\n          'spectrum-ClearButton'\n        )\n      }\n      isDisabled={isDisabled} />\n  );\n\n  // SearchField is essentially a controlled TextField so we filter out prop.value and prop.defaultValue in favor of state.value\n  return (\n    <TextFieldBase\n      {...otherProps}\n      labelProps={labelProps}\n      inputProps={inputProps}\n      UNSAFE_className={\n        classNames(\n          styles,\n          'spectrum-Search',\n          {\n            'is-disabled': isDisabled,\n            'is-quiet': props.isQuiet\n          },\n          UNSAFE_className\n        )\n      }\n      inputClassName={classNames(styles, 'spectrum-Search-input')}\n      ref={ref}\n      inputRef={inputRef}\n      isDisabled={isDisabled}\n      icon={icon}\n      wrapperChildren={(state.value !== '' && !props.isReadOnly) && clearButton} />\n  );\n}\n\n/**\n * A SearchField is a text field designed for searches.\n */\nlet _SearchField = forwardRef(SearchField);\nexport {_SearchField as SearchField};\n"],"names":["$parcel$interopDefault","a","__esModule","default","SearchField","props","ref","useProviderProps","defaultIcon","classNames","icon","isDisabled","UNSAFE_className","otherProps","state","useSearchFieldState","inputRef","useRef","labelProps","inputProps","clearButtonProps","useSearchField","clearButton","isQuiet","value","isReadOnly","_SearchField","forwardRef"],"version":3,"file":"main.js.map"}