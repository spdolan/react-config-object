{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./packages/@react-spectrum/layout/src/Grid.tsx","./packages/@react-spectrum/layout/src/flex.css","./packages/@react-spectrum/layout/src/Flex.tsx"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {\n  baseStyleProps,\n  dimensionValue,\n  passthroughStyle,\n  StyleHandlers,\n  useDOMRef,\n  useStyleProps\n} from '@react-spectrum/utils';\nimport {DimensionValue, DOMRef} from '@react-types/shared';\nimport {filterDOMProps} from '@react-aria/utils';\nimport {GridProps} from '@react-types/layout';\nimport React, {forwardRef} from 'react';\n\nconst gridStyleProps: StyleHandlers = {\n  ...baseStyleProps,\n  autoFlow: ['gridAutoFlow', passthroughStyle],\n  autoColumns: ['gridAutoColumns', gridDimensionValue],\n  autoRows: ['gridAutoRows', gridDimensionValue],\n  areas: ['gridTemplateAreas', gridTemplateAreasValue],\n  columns: ['gridTemplateColumns', gridTemplateValue],\n  rows: ['gridTemplateRows', gridTemplateValue],\n  gap: ['gap', dimensionValue],\n  rowGap: ['rowGap', dimensionValue],\n  columnGap: ['columnGap', dimensionValue],\n  justifyItems: ['justifyItems', passthroughStyle],\n  justifyContent: ['justifyContent', passthroughStyle],\n  alignItems: ['alignItems', passthroughStyle],\n  alignContent: ['alignContent', passthroughStyle]\n};\n\nfunction Grid(props: GridProps, ref: DOMRef<HTMLDivElement>) {\n  let {\n    children,\n    ...otherProps\n  } = props;\n  let {styleProps} = useStyleProps(otherProps, gridStyleProps);\n  styleProps.style.display = 'grid'; // inline-grid?\n  let domRef = useDOMRef(ref);\n\n  return (\n    <div {...filterDOMProps(otherProps)} {...styleProps} ref={domRef}>\n      {children}\n    </div>\n  );\n}\n\n/**\n * Can be used to make a repeating fragment of the columns or rows list.\n * See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/repeat).\n * @param count - The number of times to repeat the fragment.\n * @param repeat - The fragment to repeat.\n */\nexport function repeat(count: number | 'auto-fill' | 'auto-fit', repeat: DimensionValue | DimensionValue[]): string {\n  return `repeat(${count}, ${gridTemplateValue(repeat)})`;\n}\n\n/**\n * Defines a size range greater than or equal to min and less than or equal to max.\n * See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/minmax).\n * @param min - The minimum size.\n * @param max - The maximum size.\n */\nexport function minmax(min: DimensionValue, max: DimensionValue): string {\n  return `minmax(${gridDimensionValue(min)}, ${gridDimensionValue(max)})`;\n}\n\n/**\n * Clamps a given size to an available size.\n * See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/fit-content).\n * @param dimension - The size to clamp.\n */\nexport function fitContent(dimension: DimensionValue): string {\n  return `fit-content(${gridDimensionValue(dimension)})`;\n}\n\nfunction gridTemplateAreasValue(value) {\n  return value.map(v => `\"${v}\"`).join('\\n');\n}\n\nfunction gridDimensionValue(value) {\n  if (/^max-content|min-content|minmax|auto|fit-content|repeat|subgrid/.test(value)) {\n    return value;\n  }\n\n  return dimensionValue(value);\n}\n\nfunction gridTemplateValue(value) {\n  if (Array.isArray(value)) {\n    return value.map(gridDimensionValue).join(' ');\n  }\n\n  return gridDimensionValue(value);\n}\n\n/**\n * A layout container using CSS grid. Supports Spectrum dimensions as values to\n * ensure consistent and adaptive sizing and spacing.\n */\nconst _Grid = forwardRef(Grid);\nexport {_Grid as Grid};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n.flex-container {\n  /* this is necessary so that the inner margins don't affect anything outside */\n  display: flex;\n}\n\n.flex {\n  display: flex;\n}\n\n.flex-gap {\n  --gap: 0px;\n  --column-gap: var(--gap);\n  --row-gap: var(--gap);\n\n  /* apply a negative margin to counteract the margin on each item at the edges */\n  margin: calc(var(--row-gap) / -2) calc(var(--column-gap) / -2);\n\n  /* increase the width and height to account for this margin */\n  /* Add 1px to fix rounding error in Safari (╯°□°)╯︵ ┻━┻ */\n  width: calc(100% + calc(var(--column-gap) + 1px));\n  height: calc(100% + var(--row-gap));\n}\n\n.flex-gap > * {\n  /* apply half of the gap to each side of every item */\n  margin: calc(var(--row-gap) / 2) calc(var(--column-gap) / 2);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames, dimensionValue, passthroughStyle, StyleHandlers, useDOMRef, useStyleProps} from '@react-spectrum/utils';\nimport {DOMRef} from '@react-types/shared';\nimport {filterDOMProps} from '@react-aria/utils';\nimport {FlexProps} from '@react-types/layout';\nimport React, {forwardRef} from 'react';\nimport styles from './flex.css';\n\nconst flexStyleProps: StyleHandlers = {\n  direction: ['flexDirection', passthroughStyle],\n  wrap: ['flexWrap', flexWrapValue],\n  justifyContent: ['justifyContent', flexAlignValue],\n  alignItems: ['alignItems', flexAlignValue],\n  alignContent: ['alignContent', flexAlignValue]\n};\n\nfunction Flex(props: FlexProps, ref: DOMRef<HTMLDivElement>) {\n  let {\n    children,\n    ...otherProps\n  } = props;\n  let {styleProps} = useStyleProps(otherProps);\n  let {styleProps: flexStyle} = useStyleProps(otherProps, flexStyleProps);\n  let domRef = useDOMRef(ref);\n\n  // If a gap property is specified, and there is no native support, use a shim.\n  // Two divs are required for this: the outer one contains most style properties, and the inner\n  // one is the flex container. Each item inside the flex container gets a margin around it based\n  // on the gap, and the flex container has a negative margin to counteract this. The outer container\n  // is necessary to allow nesting of flex containers with gaps, so that the inner CSS variable doesn't\n  // override the outer one.\n  if ((props.gap || props.rowGap || props.columnGap) && !isFlexGapSupported()) {\n    let style = {\n      ...flexStyle.style,\n      '--column-gap': props.columnGap != null ? dimensionValue(props.columnGap) : undefined,\n      '--row-gap': props.rowGap != null ? dimensionValue(props.rowGap) : undefined,\n      '--gap': props.gap != null ? dimensionValue(props.gap) : undefined\n    };\n\n    return (\n      <div {...filterDOMProps(otherProps)} {...styleProps} className={classNames(styles, 'flex-container', styleProps.className)} ref={domRef}>\n        <div className={classNames(styles, 'flex', 'flex-gap')} style={style}>\n          {children}\n        </div>\n      </div>\n    );\n  }\n\n  // If no gaps, or native support exists, then we only need to render a single div.\n  let style = {\n    ...styleProps.style,\n    ...flexStyle.style\n  };\n\n  if (props.gap != null) {\n    style.gap = dimensionValue(props.gap);\n  }\n\n  if (props.columnGap != null) {\n    style.columnGap = dimensionValue(props.columnGap);\n  }\n\n  if (props.rowGap != null) {\n    style.rowGap = dimensionValue(props.rowGap);\n  }\n\n  return (\n    <div className={classNames(styles, 'flex', styleProps.className)} style={style} ref={domRef}>\n      {children}\n    </div>\n  );\n}\n\n/**\n * Normalize 'start' and 'end' alignment values to 'flex-start' and 'flex-end'\n * in flex containers for browser compatibility.\n */\nfunction flexAlignValue(value) {\n  if (value === 'start') {\n    return 'flex-start';\n  }\n\n  if (value === 'end') {\n    return 'flex-end';\n  }\n\n  return value;\n}\n\n/**\n * Takes a boolean and translates it to flex wrap or nowrap.\n */\nfunction flexWrapValue(value) {\n  if (typeof value === 'boolean') {\n    return value ? 'wrap' : 'nowrap';\n  }\n\n  return value;\n}\n\n\n// Original licensing for the following method can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/Modernizr/Modernizr/blob/7efb9d0edd66815fb115fdce95fabaf019ce8db5/feature-detects/css/flexgap.js\n\nlet _isFlexGapSupported = null;\nfunction isFlexGapSupported() {\n  if (_isFlexGapSupported != null) {\n    return _isFlexGapSupported;\n  }\n\n  if (typeof document === 'undefined') {\n    return false;\n  }\n\n  // create flex container with row-gap set\n  var flex = document.createElement('div');\n  flex.style.display = 'flex';\n  flex.style.flexDirection = 'column';\n  flex.style.rowGap = '1px';\n\n  // create two, elements inside it\n  flex.appendChild(document.createElement('div'));\n  flex.appendChild(document.createElement('div'));\n\n  // append to the DOM (needed to obtain scrollHeight)\n  document.body.appendChild(flex);\n  _isFlexGapSupported = flex.scrollHeight === 1; // flex container should be 1px high from the row-gap\n  flex.parentNode.removeChild(flex);\n\n  return _isFlexGapSupported;\n}\n\n/**\n * A layout container using flexbox. Provides Spectrum dimension values, and supports the gap\n * property to define consistent spacing between items.\n */\nconst _Flex = forwardRef(Flex);\nexport {_Flex as Flex};\n"],"names":["$parcel$interopDefault","a","__esModule","default","gridStyleProps","baseStyleProps","autoFlow","passthroughStyle","autoColumns","gridDimensionValue","autoRows","areas","gridTemplateAreasValue","columns","gridTemplateValue","rows","gap","dimensionValue","rowGap","columnGap","justifyItems","justifyContent","alignItems","alignContent","Grid","props","ref","children","otherProps","styleProps","useStyleProps","style","display","domRef","useDOMRef","filterDOMProps","repeat","count","minmax","min","max","fitContent","dimension","value","map","v","join","test","Array","isArray","_Grid","forwardRef","flexStyleProps","direction","wrap","flexWrapValue","flexAlignValue","Flex","flexStyle","isFlexGapSupported","undefined","classNames","className","_isFlexGapSupported","document","flex","createElement","flexDirection","appendChild","body","scrollHeight","parentNode","removeChild","_Flex"],"version":3,"file":"module.js.map"}