{"mappings":";;;;;;;;;;AAAA,SAASA,sBAAT,CAAgCC,CAAhC,EAAmC;AACjC,SAAOA,CAAC,IAAIA,CAAC,CAACC,UAAP,GAAoBD,CAAC,CAACE,OAAtB,GAAgCF,CAAvC;AACD;;;;ACFD,0CAAiB;AACf,mBAAiB,sBADF;AAEf,gBAAc,mBAFC;AAGf,gBAAc,mBAHC;AAIf,iBAAe,oBAJA;AAKf,8BAA4B,iCALb;AAMf,mCAAiC,sCANlB;AAOf,0BAAwB;AAPT,CAAjB;;;ACsBA;;;;OAIO,SAASG,IAAT,CAAcC,KAAd,EAAwC;AAC7CA,EAAAA,KAAK,GAAGC,gBAAgB,CAACD,KAAD,CAAxB;AACA,MAAI;AACFE,IAAAA,OAAO,GAAG,SADR;AAEFC,IAAAA,OAFE;AAGFC,IAAAA,QAHE;AAIF;AACAC,IAAAA;AALE,MAMAL,KANJ;AAOA,MAAI;AAACM,IAAAA;AAAD,MAAeC,aAAa,CAACP,KAAD,CAAhC;AACA,MAAI;AAACQ,IAAAA,UAAD;AAAaC,IAAAA;AAAb,MAA0BC,QAAQ,CAAC,EAAD,CAAtC;;AAEA,MAAIL,IAAJ,EAAU;AACRM,IAAAA,OAAO,CAACC,IAAR,CAAa,8DAAb;AACD;;AAED,MAAIC,GAAG,GAAGC,MAAM,EAAhB;AACA,MAAI;AAACC,IAAAA;AAAD,MAAcC,OAAO,oCACpBhB,KADoB;AAEvBiB,IAAAA,WAAW,EAAE,OAAOb,QAAP,KAAoB,QAApB,GAA+B,MAA/B,GAAwC;AAF9B,MAGtBS,GAHsB,CAAzB;AAKA,sBACE,qBAAC,SAAD;AAAW,IAAA,cAAc,EAAEK,UAAU,mDAAS,YAAT;AAArC,KACGC,MAAK,CAACC,YAAN,CACCC,iBAAiB,CAACjB,QAAD,CADlB,qCAGME,UAHN,EAIMgB,UAAU,CAACP,SAAD,EAAYP,UAAZ,CAJhB;AAKGK,IAAAA,GALH;AAMGU,IAAAA,SAAS,EAAEL,UAAU,mDAEnB,eAFmB,EAGnB;AACE,8BAAwBf,OAD1B;AAEE,2BAAmBD,OAAnB,GAA+BA,OAFjC;AAGE,oBAAcO;AAHhB,KAHmB,EAQnBH,UAAU,CAACiB,SARQ;AANxB,KADH,CADF;AAsBD","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./node_modules/@adobe/spectrum-css-temp/components/link/vars.css","./packages/@react-spectrum/link/src/Link.tsx"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames, getWrappedElement, useStyleProps} from '@react-spectrum/utils';\nimport {FocusRing} from '@react-aria/focus';\nimport {mergeProps} from '@react-aria/utils';\nimport React, {useRef} from 'react';\nimport {SpectrumLinkProps} from '@react-types/link';\nimport styles from '@adobe/spectrum-css-temp/components/link/vars.css';\nimport {useHover} from '@react-aria/interactions';\nimport {useLink} from '@react-aria/link';\nimport {useProviderProps} from '@react-spectrum/provider';\n\n/**\n * Links allow users to navigate to a different location.\n * They can be presented inline inside a paragraph or as standalone text.\n */\nexport function Link(props: SpectrumLinkProps) {\n  props = useProviderProps(props);\n  let {\n    variant = 'primary',\n    isQuiet,\n    children,\n    // @ts-ignore\n    href\n  } = props;\n  let {styleProps} = useStyleProps(props);\n  let {hoverProps, isHovered} = useHover({});\n\n  if (href) {\n    console.warn('href is deprecated, please use an anchor element as children');\n  }\n\n  let ref = useRef();\n  let {linkProps} = useLink({\n    ...props,\n    elementType: typeof children === 'string' ? 'span' : 'a'\n  }, ref);\n\n  return (\n    <FocusRing focusRingClass={classNames(styles, 'focus-ring')}>\n      {React.cloneElement(\n        getWrappedElement(children),\n        {\n          ...styleProps,\n          ...mergeProps(linkProps, hoverProps),\n          ref,\n          className: classNames(\n            styles,\n            'spectrum-Link',\n            {\n              'spectrum-Link--quiet': isQuiet,\n              [`spectrum-Link--${variant}`]: variant,\n              'is-hovered': isHovered\n            },\n            styleProps.className\n          )\n        }\n      )}\n    </FocusRing>\n  );\n}\n"],"names":["$parcel$interopDefault","a","__esModule","default","Link","props","useProviderProps","variant","isQuiet","children","href","styleProps","useStyleProps","hoverProps","isHovered","useHover","console","warn","ref","useRef","linkProps","useLink","elementType","classNames","React","cloneElement","getWrappedElement","mergeProps","className"],"version":3,"file":"module.js.map"}