{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./packages/@react-spectrum/menu/src/context.ts","./node_modules/@adobe/spectrum-css-temp/components/menu/vars.css","./packages/@react-spectrum/menu/src/MenuTrigger.tsx","./packages/@react-spectrum/menu/src/MenuItem.tsx","./packages/@react-spectrum/menu/src/MenuSection.tsx","./packages/@react-spectrum/menu/src/Menu.tsx"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusStrategy} from '@react-types/shared';\nimport React, {HTMLAttributes, MutableRefObject, useContext} from 'react';\n\nexport interface MenuContextValue extends HTMLAttributes<HTMLElement> {\n  onClose?: () => void,\n  closeOnSelect?: boolean,\n  shouldFocusWrap?: boolean,\n  autoFocus?: boolean | FocusStrategy,\n  ref?: MutableRefObject<HTMLUListElement>\n}\n\nexport const MenuContext = React.createContext<MenuContextValue>({});\n\nexport function useMenuContext(): MenuContextValue {\n  return useContext(MenuContext);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames, unwrapDOMRef, useDOMRef, useMediaQuery} from '@react-spectrum/utils';\nimport {DismissButton, useOverlayPosition} from '@react-aria/overlays';\nimport {DOMRef, DOMRefValue} from '@react-types/shared';\nimport {FocusScope} from '@react-aria/focus';\nimport {MenuContext} from './context';\nimport {Placement} from '@react-types/overlays';\nimport {Popover, Tray} from '@react-spectrum/overlays';\nimport {PressResponder} from '@react-aria/interactions';\nimport React, {forwardRef, Fragment, useRef} from 'react';\nimport {SpectrumMenuTriggerProps} from '@react-types/menu';\nimport styles from '@adobe/spectrum-css-temp/components/menu/vars.css';\nimport {useMenuTrigger} from '@react-aria/menu';\nimport {useMenuTriggerState} from '@react-stately/menu';\n\nfunction MenuTrigger(props: SpectrumMenuTriggerProps, ref: DOMRef<HTMLElement>) {\n  let menuPopoverRef = useRef<DOMRefValue<HTMLDivElement>>();\n  let triggerRef = useRef<HTMLElement>();\n  let domRef = useDOMRef(ref);\n  let menuTriggerRef = domRef || triggerRef;\n  let menuRef = useRef<HTMLUListElement>();\n  let {\n    children,\n    align = 'start',\n    shouldFlip = true,\n    direction = 'bottom',\n    closeOnSelect = true\n  } = props;\n\n  let [menuTrigger, menu] = React.Children.toArray(children);\n  let state = useMenuTriggerState(props);\n\n  let {menuTriggerProps, menuProps} = useMenuTrigger({}, state, menuTriggerRef);\n\n  let {overlayProps: positionProps, placement} = useOverlayPosition({\n    targetRef: menuTriggerRef,\n    overlayRef: unwrapDOMRef(menuPopoverRef),\n    scrollRef: menuRef,\n    placement: `${direction} ${align}` as Placement,\n    shouldFlip: shouldFlip,\n    isOpen: state.isOpen\n  });\n\n  let isMobile = useMediaQuery('(max-width: 700px)');\n  let menuContext = {\n    ...menuProps,\n    ref: menuRef,\n    onClose: state.close,\n    closeOnSelect,\n    autoFocus: state.focusStrategy || true,\n    UNSAFE_style: {\n      width: isMobile ? '100%' : undefined\n    },\n    UNSAFE_className: classNames(styles, {'spectrum-Menu-popover': !isMobile})\n  };\n\n  let contents = (\n    <FocusScope restoreFocus>\n      <DismissButton onDismiss={state.close} />\n      {menu}\n      <DismissButton onDismiss={state.close} />\n    </FocusScope>\n  );\n\n  // On small screen devices, the menu is rendered in a tray, otherwise a popover.\n  let overlay;\n  if (isMobile) {\n    overlay = (\n      <Tray isOpen={state.isOpen} onClose={state.close} shouldCloseOnBlur>\n        {contents}\n      </Tray>\n    );\n  } else {\n    overlay = (\n      <Popover\n        isOpen={state.isOpen}\n        UNSAFE_style={positionProps.style}\n        ref={menuPopoverRef}\n        placement={placement}\n        hideArrow\n        onClose={state.close}\n        shouldCloseOnBlur>\n        {contents}\n      </Popover>\n    );\n  }\n\n  return (\n    <Fragment>\n      <PressResponder {...menuTriggerProps} ref={menuTriggerRef} isPressed={state.isOpen}>\n        {menuTrigger}\n      </PressResponder>\n      <MenuContext.Provider value={menuContext}>\n        {overlay}\n      </MenuContext.Provider>\n    </Fragment>\n  );\n}\n\n/**\n * The MenuTrigger serves as a wrapper around a Menu and its associated trigger,\n * linking the Menu's open state with the trigger's press state.\n */\nlet _MenuTrigger = forwardRef(MenuTrigger);\nexport {_MenuTrigger as MenuTrigger};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport CheckmarkMedium from '@spectrum-icons/ui/CheckmarkMedium';\nimport {classNames, SlotProvider} from '@react-spectrum/utils';\nimport {FocusRing} from '@react-aria/focus';\nimport {Grid} from '@react-spectrum/layout';\nimport {mergeProps} from '@react-aria/utils';\nimport {Node} from '@react-types/shared';\nimport React, {Key, useRef} from 'react';\nimport styles from '@adobe/spectrum-css-temp/components/menu/vars.css';\nimport {Text} from '@react-spectrum/text';\nimport {TreeState} from '@react-stately/tree';\nimport {useHover} from '@react-aria/interactions';\nimport {useMenuContext} from './context';\nimport {useMenuItem} from '@react-aria/menu';\n\ninterface MenuItemProps<T> {\n  item: Node<T>,\n  state: TreeState<T>,\n  isVirtualized?: boolean,\n  onAction?: (key: Key) => void\n}\n\n/** @private */\nexport function MenuItem<T>(props: MenuItemProps<T>) {\n  let {\n    item,\n    state,\n    isVirtualized,\n    onAction\n  } = props;\n\n  let {\n    onClose,\n    closeOnSelect\n  } = useMenuContext();\n\n  let {\n    rendered,\n    key\n  } = item;\n\n  let isSelected = state.selectionManager.isSelected(key);\n  let isDisabled = state.disabledKeys.has(key);\n\n  let ref = useRef<HTMLLIElement>();\n  let {menuItemProps, labelProps, descriptionProps, keyboardShortcutProps} = useMenuItem(\n    {\n      isSelected,\n      isDisabled,\n      'aria-label': item['aria-label'],\n      key,\n      onClose,\n      closeOnSelect,\n      isVirtualized,\n      onAction\n    },\n    state,\n    ref\n  );\n  let {hoverProps, isHovered} = useHover({isDisabled});\n\n  let contents = typeof rendered === 'string'\n    ? <Text>{rendered}</Text>\n    : rendered;\n\n  return (\n    <FocusRing focusRingClass={classNames(styles, 'focus-ring')}>\n      <li\n        {...mergeProps(menuItemProps, hoverProps)}\n        ref={ref}\n        className={classNames(\n          styles,\n          'spectrum-Menu-item',\n          {\n            'is-disabled': isDisabled,\n            'is-selected': isSelected,\n            'is-selectable': state.selectionManager.selectionMode !== 'none',\n            'is-hovered': isHovered\n          }\n        )}>\n        <Grid\n          UNSAFE_className={\n            classNames(\n              styles,\n              'spectrum-Menu-itemGrid'\n            )\n          }>\n          <SlotProvider\n            slots={{\n              text: {UNSAFE_className: styles['spectrum-Menu-itemLabel'], ...labelProps},\n              end: {UNSAFE_className: styles['spectrum-Menu-end'], ...descriptionProps},\n              icon: {UNSAFE_className: styles['spectrum-Menu-icon']},\n              description: {UNSAFE_className: styles['spectrum-Menu-description'], ...descriptionProps},\n              keyboard: {UNSAFE_className: styles['spectrum-Menu-keyboard'], ...keyboardShortcutProps}\n            }}>\n            {contents}\n            {isSelected &&\n              <CheckmarkMedium\n                slot=\"checkmark\"\n                UNSAFE_className={\n                      classNames(\n                        styles,\n                        'spectrum-Menu-checkmark'\n                      )\n                    } />\n                }\n          </SlotProvider>\n        </Grid>\n      </li>\n    </FocusRing>\n  );\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames} from '@react-spectrum/utils';\nimport {MenuItem} from './MenuItem';\nimport {Node} from '@react-types/shared';\nimport React, {Fragment, Key} from 'react';\nimport styles from '@adobe/spectrum-css-temp/components/menu/vars.css';\nimport {TreeState} from '@react-stately/tree';\nimport {useMenuSection} from '@react-aria/menu';\nimport {useSeparator} from '@react-aria/separator';\n\ninterface MenuSectionProps<T> {\n  item: Node<T>,\n  state: TreeState<T>,\n  onAction?: (key: Key) => void\n}\n\n/** @private */\nexport function MenuSection<T>(props: MenuSectionProps<T>) {\n  let {item, state, onAction} = props;\n  let {itemProps, headingProps, groupProps} = useMenuSection({\n    heading: item.rendered,\n    'aria-label': item['aria-label']\n  });\n\n  let {separatorProps} = useSeparator({\n    elementType: 'li'\n  });\n\n  return (\n    <Fragment>\n      {item.key !== state.collection.getFirstKey() &&\n        <li\n          {...separatorProps}\n          className={classNames(\n            styles,\n            'spectrum-Menu-divider'\n          )} />\n      }\n      <li {...itemProps}>\n        {item.rendered &&\n          <span\n            {...headingProps}\n            className={\n              classNames(\n                styles,\n                'spectrum-Menu-sectionHeading'\n              )\n            }>\n            {item.rendered}\n          </span>\n        }\n        <ul\n          {...groupProps}\n          className={\n            classNames(\n              styles,\n              'spectrum-Menu'\n            )\n          }>\n          {[...item.childNodes].map(node => {\n            let item = (\n              <MenuItem\n                key={node.key}\n                item={node}\n                state={state}\n                onAction={onAction} />\n            );\n\n            if (node.wrapper) {\n              item = node.wrapper(item);\n            }\n\n            return item;\n          })}\n        </ul>\n      </li>\n    </Fragment>\n  );\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames, useDOMRef, useStyleProps} from '@react-spectrum/utils';\nimport {DOMRef} from '@react-types/shared';\nimport {MenuContext} from './context';\nimport {MenuItem} from './MenuItem';\nimport {MenuSection} from './MenuSection';\nimport {mergeProps} from '@react-aria/utils';\nimport React, {ReactElement, useContext, useEffect} from 'react';\nimport {SpectrumMenuProps} from '@react-types/menu';\nimport styles from '@adobe/spectrum-css-temp/components/menu/vars.css';\nimport {useMenu} from '@react-aria/menu';\nimport {useTreeState} from '@react-stately/tree';\n\nfunction Menu<T extends object>(props: SpectrumMenuProps<T>, ref: DOMRef<HTMLUListElement>) {\n  let contextProps = useContext(MenuContext);\n  let completeProps = {\n    ...mergeProps(contextProps, props)\n  };\n\n  let domRef = useDOMRef(ref);\n  let state = useTreeState(completeProps);\n  let {menuProps} = useMenu(completeProps, state, domRef);\n  let {styleProps} = useStyleProps(completeProps);\n\n  // Sync ref from <MenuTrigger> context with DOM ref.\n  useEffect(() => {\n    if (contextProps && contextProps.ref) {\n      contextProps.ref.current = domRef.current;\n      return () => {\n        contextProps.ref.current = null;\n      };\n    }\n  }, [contextProps, domRef]);\n\n  return (\n    <ul\n      {...menuProps}\n      {...styleProps}\n      ref={domRef}\n      className={\n        classNames(\n          styles,\n          'spectrum-Menu',\n          styleProps.className\n        )\n      }>\n      {[...state.collection].map(item => {\n        if (item.type === 'section') {\n          return (\n            <MenuSection\n              key={item.key}\n              item={item}\n              state={state}\n              onAction={completeProps.onAction} />\n          );\n        }\n\n        let menuItem = (\n          <MenuItem\n            key={item.key}\n            item={item}\n            state={state}\n            onAction={completeProps.onAction} />\n        );\n\n        if (item.wrapper) {\n          menuItem = item.wrapper(menuItem);\n        }\n\n        return menuItem;\n      })}\n    </ul>\n  );\n}\n\n/**\n * Menus display a list of actions or options that a user can choose.\n */\n// forwardRef doesn't support generic parameters, so cast the result to the correct type\n// https://stackoverflow.com/questions/58469229/react-with-typescript-generics-while-using-react-forwardref\nconst _Menu = React.forwardRef(Menu) as <T>(props: SpectrumMenuProps<T> & {ref?: DOMRef<HTMLUListElement>}) => ReactElement;\nexport {_Menu as Menu};\n"],"names":["$parcel$interopDefault","a","__esModule","default","MenuContext","React","createContext","useMenuContext","useContext","MenuTrigger","props","ref","menuPopoverRef","useRef","triggerRef","domRef","useDOMRef","menuTriggerRef","menuRef","children","align","shouldFlip","direction","closeOnSelect","menuTrigger","menu","Children","toArray","state","useMenuTriggerState","menuTriggerProps","menuProps","useMenuTrigger","overlayProps","positionProps","placement","useOverlayPosition","targetRef","overlayRef","unwrapDOMRef","scrollRef","isOpen","isMobile","useMediaQuery","menuContext","onClose","close","autoFocus","focusStrategy","UNSAFE_style","width","undefined","UNSAFE_className","classNames","contents","overlay","style","_MenuTrigger","forwardRef","MenuItem","item","isVirtualized","onAction","rendered","key","isSelected","selectionManager","isDisabled","disabledKeys","has","menuItemProps","labelProps","descriptionProps","keyboardShortcutProps","useMenuItem","hoverProps","isHovered","useHover","mergeProps","selectionMode","text","end","icon","description","keyboard","MenuSection","itemProps","headingProps","groupProps","useMenuSection","heading","separatorProps","useSeparator","elementType","collection","getFirstKey","childNodes","map","node","wrapper","Menu","contextProps","completeProps","useTreeState","useMenu","styleProps","useStyleProps","useEffect","current","className","type","menuItem","_Menu"],"version":3,"file":"module.js.map"}