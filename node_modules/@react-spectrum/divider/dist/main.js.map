{"mappings":";;;;;;;;;;;;;;;;;;;AAAA,SAASA,sBAAT,CAAgCC,CAAhC,EAAmC;AACjC,SAAOA,CAAC,IAAIA,CAAC,CAACC,UAAP,GAAoBD,CAAC,CAACE,OAAtB,GAAgCF,CAAvC;AACD;;;;ACFD,0CAAiB;AACf,mBAAiB,sBADF;AAEf,0BAAwB,6BAFT;AAGf,2BAAyB,8BAHV;AAIf,0BAAwB,6BAJT;AAKf,+BAA6B,kCALd;AAMf,6BAA2B;AANZ,CAAjB;ACmBA,IAAIG,uCAAO,GAAG;AACZC,EAAAA,CAAC,EAAE,OADS;AAEZC,EAAAA,CAAC,EAAE,QAFS;AAGZC,EAAAA,CAAC,EAAE;AAHS,CAAd;;;AAMA,SAASC,uCAAT,CAAiBC,KAAjB,EAA8CC,GAA9C,EAA2D;AACzDD,EAAAA,KAAK,GAAGE,YAAY,CAACF,KAAD,EAAQ,SAAR,CAApB;;AACA,MAAI;AACFG,IAAAA,IAAI,GAAG,GADL;AAEFC,IAAAA,WAAW,GAAG;AAFZ,MAIAJ,KAJJ;AAAA,MAGKK,UAHL,oDAIIL,KAJJ;;AAKA,MAAIM,MAAM,GAAGC,SAAS,CAACN,GAAD,CAAtB;AACA,MAAI;AAACO,IAAAA;AAAD,MAAeC,aAAa,CAACJ,UAAD,CAAhC;AACA,MAAIK,MAAM,GAAGf,uCAAO,CAACQ,IAAD,CAApB;AAEA,MAAIQ,OAAO,GAAG,IAAd;;AACA,MAAIP,WAAW,KAAK,UAApB,EAAgC;AAC9BO,IAAAA,OAAO,GAAG,KAAV;AACD;;AAED,MAAI;AAACC,IAAAA;AAAD,MAAmBC,YAAY,iCAC9Bb,KAD8B;AAEjCc,IAAAA,WAAW,EAAEH;AAFoB,KAAnC;AAKA,sBACE,qBAAC,OAAD,kCACMH,UADN;AAEE,IAAA,SAAS,EACPO,UAAU,mDAER,eAFQ,sBAGUL,MAHV,EAIR;AACE,iCAA2BN,WAAW,KAAK,UAD7C;AAEE,mCAA6BA,WAAW,KAAK;AAF/C,KAJQ,EAQRI,UAAU,CAACQ,SARH,CAHd,CAcE;AAdF;AAeE,IAAA,GAAG,EAAEV;AAfP,KAgBMM,cAhBN,EADF;AAmBD;AAED;;;;;;AAIA,IAAIK,OAAQ,GAAGC,MAAK,CAACC,UAAN,CAAiBpB,uCAAjB,CAAf","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./node_modules/@adobe/spectrum-css-temp/components/rule/vars.css","./packages/@react-spectrum/divider/src/Divider.tsx"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames, useDOMRef, useSlotProps, useStyleProps} from '@react-spectrum/utils';\nimport {DOMRef} from '@react-types/shared';\nimport React from 'react';\nimport {SpectrumDividerProps} from '@react-types/divider';\nimport styles from '@adobe/spectrum-css-temp/components/rule/vars.css';\nimport {useSeparator} from '@react-aria/separator';\n\nlet sizeMap = {\n  S: 'small',\n  M: 'medium',\n  L: 'large'\n};\n\nfunction Divider(props: SpectrumDividerProps, ref: DOMRef) {\n  props = useSlotProps(props, 'divider');\n  let {\n    size = 'L',\n    orientation = 'horizontal',\n    ...otherProps\n  } = props;\n  let domRef = useDOMRef(ref);\n  let {styleProps} = useStyleProps(otherProps);\n  let weight = sizeMap[size];\n\n  let Element = 'hr';\n  if (orientation === 'vertical') {\n    Element = 'div';\n  }\n\n  let {separatorProps} = useSeparator({\n    ...props,\n    elementType: Element\n  });\n\n  return (\n    <Element\n      {...styleProps}\n      className={\n        classNames(\n          styles,\n          'spectrum-Rule',\n          `spectrum-Rule--${weight}`,\n          {\n            'spectrum-Rule--vertical': orientation === 'vertical',\n            'spectrum-Rule--horizontal': orientation === 'horizontal'\n          },\n          styleProps.className\n        )\n      }\n      // @ts-ignore https://github.com/Microsoft/TypeScript/issues/28892\n      ref={domRef}\n      {...separatorProps} />\n  );\n}\n\n/**\n * Dividers bring clarity to a layout by grouping and dividing content in close proximity.\n * They can also be used to establish rhythm and hierarchy.\n */\nlet _Divider = React.forwardRef(Divider);\nexport {_Divider as Divider};\n"],"names":["$parcel$interopDefault","a","__esModule","default","sizeMap","S","M","L","Divider","props","ref","useSlotProps","size","orientation","otherProps","domRef","useDOMRef","styleProps","useStyleProps","weight","Element","separatorProps","useSeparator","elementType","classNames","className","_Divider","React","forwardRef"],"version":3,"file":"main.js.map"}