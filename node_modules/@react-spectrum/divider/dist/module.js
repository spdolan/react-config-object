import { useSeparator } from "@react-aria/separator";
import _react from "react";
import { classNames, useDOMRef, useSlotProps, useStyleProps } from "@react-spectrum/utils";
import _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
import _babelRuntimeHelpersEsmExtends from "@babel/runtime/helpers/esm/extends";
import "./main.css";

function $parcel$interopDefault(a) {
  return a && a.__esModule ? a.default : a;
}

// ASSET: /Users/govett/dev/react-spectrum-v3/node_modules/@adobe/spectrum-css-temp/components/rule/vars.css
var $c73a71f7d88c6b33532476ecc5c$exports = {};
$c73a71f7d88c6b33532476ecc5c$exports = {
  "spectrum-Rule": "_spectrum-Rule_3c70b",
  "spectrum-Rule--large": "_spectrum-Rule--large_3c70b",
  "spectrum-Rule--medium": "_spectrum-Rule--medium_3c70b",
  "spectrum-Rule--small": "_spectrum-Rule--small_3c70b",
  "spectrum-Rule--horizontal": "_spectrum-Rule--horizontal_3c70b",
  "spectrum-Rule--vertical": "_spectrum-Rule--vertical_3c70b"
};
let $ea27f9ba945db758ff2bd45520b5b1$var$sizeMap = {
  S: 'small',
  M: 'medium',
  L: 'large'
};
var $c73a71f7d88c6b33532476ecc5c$$interop$default = $parcel$interopDefault($c73a71f7d88c6b33532476ecc5c$exports);

function $ea27f9ba945db758ff2bd45520b5b1$var$Divider(props, ref) {
  props = useSlotProps(props, 'divider');

  let {
    size = 'L',
    orientation = 'horizontal'
  } = props,
      otherProps = _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose(props, ["size", "orientation"]);

  let domRef = useDOMRef(ref);
  let {
    styleProps
  } = useStyleProps(otherProps);
  let weight = $ea27f9ba945db758ff2bd45520b5b1$var$sizeMap[size];
  let Element = 'hr';

  if (orientation === 'vertical') {
    Element = 'div';
  }

  let {
    separatorProps
  } = useSeparator(_babelRuntimeHelpersEsmExtends({}, props, {
    elementType: Element
  }));
  return /*#__PURE__*/_react.createElement(Element, _babelRuntimeHelpersEsmExtends({}, styleProps, {
    className: classNames($c73a71f7d88c6b33532476ecc5c$$interop$default, 'spectrum-Rule', "spectrum-Rule--" + weight, {
      'spectrum-Rule--vertical': orientation === 'vertical',
      'spectrum-Rule--horizontal': orientation === 'horizontal'
    }, styleProps.className) // @ts-ignore https://github.com/Microsoft/TypeScript/issues/28892
    ,
    ref: domRef
  }, separatorProps));
}
/**
 * Dividers bring clarity to a layout by grouping and dividing content in close proximity.
 * They can also be used to establish rhythm and hierarchy.
 */


export let Divider = _react.forwardRef($ea27f9ba945db758ff2bd45520b5b1$var$Divider);
//# sourceMappingURL=module.js.map
