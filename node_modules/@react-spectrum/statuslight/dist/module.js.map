{"mappings":";;;;;;;;AAAA,SAASA,sBAAT,CAAgCC,CAAhC,EAAmC;AACjC,SAAOA,CAAC,IAAIA,CAAC,CAACC,UAAP,GAAoBD,CAAC,CAACE,OAAtB,GAAgCF,CAAvC;AACD;;;;ACFD,4CAAiB;AACf,0BAAwB,6BADT;AAEf,mCAAiC,sCAFlB;AAGf,iBAAe,oBAHA;AAIf,oCAAkC,uCAJnB;AAKf,kCAAgC,qCALjB;AAMf,oCAAkC,uCANnB;AAOf,gCAA8B,mCAPf;AAQf,kCAAgC,qCARjB;AASf,kCAAgC,qCATjB;AAUf,kCAAgC,qCAVjB;AAWf,mCAAiC,sCAXlB;AAYf,kCAAgC,qCAZjB;AAaf,mCAAiC,sCAblB;AAcf,sCAAoC,yCAdrB;AAef,mCAAiC,sCAflB;AAgBf,kCAAgC;AAhBjB,CAAjB;;;ACoBA,SAASG,iDAAT,CAAqBC,KAArB,EAAsDC,GAAtD,EAAmF;AACjF,0BAMIC,gBAAgB,CAACF,KAAD,CANpB;AAAA,MAAI;AACFG,IAAAA,OADE;AAEFC,IAAAA,QAFE;AAGFC,IAAAA,UAHE;AAIFC,IAAAA;AAJE,GAAJ;AAAA,MAKKC,UALL;;AAOA,MAAIC,MAAM,GAAGC,SAAS,CAACR,GAAD,CAAtB;AACA,MAAI;AAACS,IAAAA;AAAD,MAAeC,aAAa,CAACJ,UAAD,CAAhC;;AAEA,MAAI,CAACH,QAAD,IAAa,CAACJ,KAAK,CAAC,YAAD,CAAvB,EAAuC;AACrCY,IAAAA,OAAO,CAACC,IAAR,CAAa,8DAAb;AACD;;AAED,MAAI,CAACP,IAAD,KAAUN,KAAK,CAAC,YAAD,CAAL,IAAuBA,KAAK,CAAC,iBAAD,CAAtC,CAAJ,EAAgE;AAC9DY,IAAAA,OAAO,CAACC,IAAR,CAAa,0CAAb;AACD;;AAED,sBACE,+DACMC,cAAc,CAACP,UAAD,EAAa;AAACQ,IAAAA,SAAS,EAAE,CAAC,CAACT;AAAd,GAAb,CADpB,EAEMI,UAFN;AAGE,IAAA,IAAI,EAAEJ,IAHR;AAIE,IAAA,SAAS,EAAEU,UAAU,qDAEnB,sBAFmB,6BAGMb,OAHN,EAInB;AACE,qBAAeE;AADjB,KAJmB,EAOnBK,UAAU,CAACO,SAPQ,CAJvB;AAaE,IAAA,GAAG,EAAET;AAbP,MAcGJ,QAdH,CADF;AAkBD;AAED;;;;;;OAIA,IAAIc,WAAY,GAAGC,UAAU,CAACpB,iDAAD,CAA7B","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./node_modules/@adobe/spectrum-css-temp/components/statuslight/vars.css","./packages/@react-spectrum/statuslight/src/StatusLight.tsx"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames, useDOMRef, useStyleProps} from '@react-spectrum/utils';\nimport {DOMRef} from '@react-types/shared';\nimport {filterDOMProps} from '@react-aria/utils';\nimport React, {forwardRef} from 'react';\nimport {SpectrumStatusLightProps} from '@react-types/statuslight';\nimport styles from '@adobe/spectrum-css-temp/components/statuslight/vars.css';\nimport {useProviderProps} from '@react-spectrum/provider';\n\nfunction StatusLight(props: SpectrumStatusLightProps, ref: DOMRef<HTMLDivElement>) {\n  let {\n    variant,\n    children,\n    isDisabled,\n    role,\n    ...otherProps\n  } = useProviderProps(props);\n  let domRef = useDOMRef(ref);\n  let {styleProps} = useStyleProps(otherProps);\n\n  if (!children && !props['aria-label']) {\n    console.warn('If no children are provided, an aria-label must be specified');\n  }\n\n  if (!role && (props['aria-label'] || props['aria-labelledby'])) {\n    console.warn('A labelled StatusLight must have a role.');\n  }\n\n  return (\n    <div\n      {...filterDOMProps(otherProps, {labelable: !!role})}\n      {...styleProps}\n      role={role}\n      className={classNames(\n        styles,\n        'spectrum-StatusLight',\n        `spectrum-StatusLight--${variant}`,\n        {\n          'is-disabled': isDisabled\n        },\n        styleProps.className\n      )}\n      ref={domRef}>\n      {children}\n    </div>\n  );\n}\n\n/**\n * Status lights are used to color code categories and labels commonly found in data visualization.\n * When status lights have a semantic meaning, they should use semantic variant colors.\n */\nlet _StatusLight = forwardRef(StatusLight);\nexport {_StatusLight as StatusLight};\n"],"names":["$parcel$interopDefault","a","__esModule","default","StatusLight","props","ref","useProviderProps","variant","children","isDisabled","role","otherProps","domRef","useDOMRef","styleProps","useStyleProps","console","warn","filterDOMProps","labelable","classNames","className","_StatusLight","forwardRef"],"version":3,"file":"module.js.map"}