{"mappings":";;;;AAuBA;;;AAGO,SAASA,mBAAT,CAA6BC,KAA7B,EAAwE;AAC7E,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBC,kBAAkB,CAACC,0CAAQ,CAACJ,KAAK,CAACC,KAAP,CAAT,EAAwBG,0CAAQ,CAACJ,KAAK,CAACK,YAAP,CAAR,IAAgC,EAAxD,EAA4DL,KAAK,CAACM,QAAlE,CAA1C;AAEA,SAAO;AACLL,IAAAA,KADK;AAELC,IAAAA;AAFK,GAAP;AAID;;;;AAED,SAASE,0CAAT,CAAkBG,GAAlB,EAAuB;AACrB,MAAIA,GAAG,IAAI,IAAX,EAAiB;AACf;AACD;;AAED,SAAOA,GAAG,CAACH,QAAJ,EAAP;AACD","sources":["./packages/@react-stately/searchfield/src/useSearchFieldState.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {SearchFieldProps} from '@react-types/searchfield';\nimport {useControlledState} from '@react-stately/utils';\n\nexport interface SearchFieldState {\n  /** The current value of the search field. */\n  readonly value: string,\n\n  /** Sets the value of the search field. */\n  setValue(value: string): void\n}\n\n/**\n * Provides state management for a search field.\n */\nexport function useSearchFieldState(props: SearchFieldProps): SearchFieldState {\n  let [value, setValue] = useControlledState(toString(props.value), toString(props.defaultValue) || '', props.onChange);\n\n  return {\n    value,\n    setValue\n  };\n}\n\nfunction toString(val) {\n  if (val == null) {\n    return;\n  }\n\n  return val.toString();\n}\n"],"names":["useSearchFieldState","props","value","setValue","useControlledState","toString","defaultValue","onChange","val"],"version":3,"file":"main.js.map"}